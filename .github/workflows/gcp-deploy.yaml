name: gcp-deploy
description: |
    Build and deploy Volta to Cloud Run.
    Depends on migrate-db workflow.

on:
  workflow_dispatch:
  workflow_run:
    workflows: [migrate-db]
    types:
      - completed
    branches:
      - main

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get-release.outputs.tag }}

    steps:
      - uses: actions/checkout@v4

      - name: Get Latest Release Tag
        id: get-release
        run: |
          TAG=$(gh release view --json tagName -q .tagName)
          echo "Latest release tag: $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Tag Image
        id: build-image
        run: make prod-build ARGS=${{ steps.get-release.outputs.tag }}

      - name: GCP Authenticate
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - run: gcloud auth configure-docker $GAR_REGION-docker.pkg.dev --quiet

      - name: Push Image with Tags to Artifact Registry
        run: |
            IMAGE_NAME=$GAR_REGION-docker.pkg.dev/$GAR_PROJECT_ID/$GAR_REPOSITORY/$PROJECT_NAME
            TAG=${{ steps.get-release.outputs.tag }}
            echo "Pushing image with tag: $TAG"
            docker push $IMAGE_NAME:$TAG
            docker push $IMAGE_NAME:latest

env:
  PROJECT_NAME: volta
  GAR_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_REGION: ${{ secrets.GCP_PROJECT_LOCATION }}
  GAR_REPOSITORY: hl7