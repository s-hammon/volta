// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: messages.sql

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createMessage = `-- name: CreateMessage :one
INSERT INTO messages (
    field_separator,
    encoding_characters,
    sending_application,
    sending_facility,
    receiving_application,
    receiving_facility,
    received_at,
    message_type,
    trigger_event,
    control_id,
    processing_id,
    version_id
)
VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)
RETURNING id
`

type CreateMessageParams struct {
	FieldSeparator       string
	EncodingCharacters   string
	SendingApplication   string
	SendingFacility      string
	ReceivingApplication string
	ReceivingFacility    string
	ReceivedAt           pgtype.Timestamp
	MessageType          string
	TriggerEvent         string
	ControlID            string
	ProcessingID         string
	VersionID            string
}

func (q *Queries) CreateMessage(ctx context.Context, arg CreateMessageParams) (int64, error) {
	row := q.db.QueryRow(ctx, createMessage,
		arg.FieldSeparator,
		arg.EncodingCharacters,
		arg.SendingApplication,
		arg.SendingFacility,
		arg.ReceivingApplication,
		arg.ReceivingFacility,
		arg.ReceivedAt,
		arg.MessageType,
		arg.TriggerEvent,
		arg.ControlID,
		arg.ProcessingID,
		arg.VersionID,
	)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const getMessageByID = `-- name: GetMessageByID :one
SELECT id, created_at, updated_at, field_separator, encoding_characters, sending_application, sending_facility, receiving_application, receiving_facility, received_at, message_type, trigger_event, control_id, processing_id, version_id
FROM messages
WHERE id = $1
`

func (q *Queries) GetMessageByID(ctx context.Context, id int64) (Message, error) {
	row := q.db.QueryRow(ctx, getMessageByID, id)
	var i Message
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.FieldSeparator,
		&i.EncodingCharacters,
		&i.SendingApplication,
		&i.SendingFacility,
		&i.ReceivingApplication,
		&i.ReceivingFacility,
		&i.ReceivedAt,
		&i.MessageType,
		&i.TriggerEvent,
		&i.ControlID,
		&i.ProcessingID,
		&i.VersionID,
	)
	return i, err
}
