// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: orders.sql

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createOrder = `-- name: CreateOrder :one
INSERT INTO orders (
    outside_system_id,
    site_id,
    visit_id,
    mrn_id,
    ordering_physician_id,
    arrival,
    number,
    current_status
)
VALUES (
    $1,
    $2,
    $3,
    $4,
    $5,
    $6,
    $7,
    $8
)
RETURNING id, created_at, updated_at, outside_system_id, site_id, visit_id, mrn_id, ordering_physician_id, arrival, number, current_status
`

type CreateOrderParams struct {
	OutsideSystemID     pgtype.Int4
	SiteID              pgtype.Int4
	VisitID             pgtype.Int8
	MrnID               pgtype.Int8
	OrderingPhysicianID pgtype.Int8
	Arrival             pgtype.Timestamp
	Number              string
	CurrentStatus       string
}

func (q *Queries) CreateOrder(ctx context.Context, arg CreateOrderParams) (Order, error) {
	row := q.db.QueryRow(ctx, createOrder,
		arg.OutsideSystemID,
		arg.SiteID,
		arg.VisitID,
		arg.MrnID,
		arg.OrderingPhysicianID,
		arg.Arrival,
		arg.Number,
		arg.CurrentStatus,
	)
	var i Order
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.OutsideSystemID,
		&i.SiteID,
		&i.VisitID,
		&i.MrnID,
		&i.OrderingPhysicianID,
		&i.Arrival,
		&i.Number,
		&i.CurrentStatus,
	)
	return i, err
}

const getOrderBySiteIDNumber = `-- name: GetOrderBySiteIDNumber :one
SELECT id, created_at, updated_at, outside_system_id, site_id, visit_id, mrn_id, ordering_physician_id, arrival, number, current_status
FROM orders
WHERE
    site_id = $1
    AND number = $2
`

type GetOrderBySiteIDNumberParams struct {
	SiteID pgtype.Int4
	Number string
}

func (q *Queries) GetOrderBySiteIDNumber(ctx context.Context, arg GetOrderBySiteIDNumberParams) (Order, error) {
	row := q.db.QueryRow(ctx, getOrderBySiteIDNumber, arg.SiteID, arg.Number)
	var i Order
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.OutsideSystemID,
		&i.SiteID,
		&i.VisitID,
		&i.MrnID,
		&i.OrderingPhysicianID,
		&i.Arrival,
		&i.Number,
		&i.CurrentStatus,
	)
	return i, err
}
